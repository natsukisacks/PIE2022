#include <elapsedMillis.h>
elapsedMillis timeElapsed;
String info[ 8 ]; // hold a max. of four drinks
float flow_rate = 0.005; // mL/ms

void setup() {
  Serial.begin(9600);
  pinMode(5, OUTPUT); // connect valve 1
  pinMode(6, OUTPUT); // connect valve 2
  pinMode(9, OUTPUT); // connect valve 3
  pinMode(10, OUTPUT); // connect valve 4
}

// Can loop through the length of string. Once ; reached, counter++, put start:end into arr[i]
void loop() {
  int valve = 0;

  // Make sure valves are closed; for these relays, HIGH = off
  digitalWrite(5, HIGH); 
  digitalWrite(6, HIGH);
  digitalWrite(9, HIGH); 
  digitalWrite(10, HIGH);

  if (Serial.available() > 0) { // must keep serial avail at this conditional
    String fromUI = Serial.readString(); // get the integer value from the serial
    fromUI.trim(); // trim any whitespace
    int start = 0;
    int end = 0;
    int i;
    int counter = 0;
    int lenInfo = 0;
    String chrcter;

    // Split into [amount, valve]
    for(i=0; i < fromUI.length(); i++) {
      // For some reason, you have to convert the string char to String again
      chrcter = String(fromUI[i]);
      if (chrcter == ",") {
        info[counter] = fromUI.substring(start, end);
        lenInfo++;
        start = end + 1;
        end++;
        counter++;
      } else {
        end++;
      }
    }
    // After you've looked at the last ","
    info[counter] = fromUI.substring(fromUI.length()-1, fromUI.length());
    lenInfo++;
    float amt = 0.0;
    float dispense = 0.0;
    int idx;

    // Go through entire array and call open respective valves
    for (idx=0; idx < lenInfo; idx++) {
      if (idx % 2 == 0) { // If it's the amount (first number in amount,valve sequence)
        amt = info[idx].toInt(); // Turn amount into int
        dispense = amt / flow_rate; // Calibration eq. for flow rate
        idx++;
        findValve(idx, dispense); // Just stops running after this
        delay(1000);
      }
    }
  }
  }

void findValve(int index, float dispenseTime) {
  /* This function figures out which valve to open and
     calls the valveOn() function to open the respective
     valve. */
  if (info[index] == "1") {
    valveOn(5, dispenseTime);
    Serial.println("open valve 1");
  } else if (info[index] == "2") {
    valveOn(6, dispenseTime);
    Serial.println("open valve 2");
  } else if (info[index] == "3") {
    valveOn(9, dispenseTime);
    Serial.println("open valve 3");
  } else if (info[index] == "4") {
    valveOn(10, dispenseTime);
    Serial.println("open valve 4");
  }
}

void valveOn(int pin, unsigned int timeOpen) {
  /* This function gives power to the proper relay.
     int pin: the pin on the Arduino to send power to
     int timeOpen: the length of time to keep the relay open */
  timeElapsed = 0; // reset the millis counter
  while (timeElapsed < timeOpen) {
    digitalWrite(pin, LOW);
  }
  digitalWrite(pin, HIGH);
}
